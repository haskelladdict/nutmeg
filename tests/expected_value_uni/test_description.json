{
    "description": "This test verifies that the count statements of unimolecular reactions fall within three standard deviations of the expected value at various points throughout the trajectory. Although each reaction is essentially of the form A->null[5000], each of the five reactions exercises different features of MCell. For example, one uses a variable rate constant file (with each value set to 5000). Another one happens at a surface class which covers the entire geometry. This test was created to address a problem with diffusing surface molecules undergoing a unimolecular reaction. See commit c825f1c for more information.",
    "author": "Jacob Czech <jczech@psc.edu>",
    "date": "2015-03-31",
    "keywords": [
        "reactions"
    ],
    "run": {
        "mdlfiles": [
            "test.mdl"
        ],
        "commandlineOpts": [
            "-quiet"
        ]
    },
    "checks": [
        {
            "testType": "CHECK_SUCCESS"
        },
        {
            "testType": "COUNT_MINMAX",
            "dataFile": "counts.txt",
            "haveHeader": true,
            "minTime": 0.0001,
            "maxTime": 0.0001,
            "countMinimum": [
                562,
                562,
                562,
                562,
                562
            ],
            "countMaximum": [
                651,
                651,
                651,
                651,
                651
            ]
        },
        {
            "testType": "COUNT_MINMAX",
            "dataFile": "counts.txt",
            "haveHeader": true,
            "minTime": 0.0002,
            "maxTime": 0.0002,
            "countMinimum": [
                322,
                322,
                322,
                322,
                322
            ],
            "countMaximum": [
                412,
                412,
                412,
                412,
                412
            ]
        },
        {
            "testType": "COUNT_MINMAX",
            "dataFile": "counts.txt",
            "haveHeader": true,
            "minTime": 0.0003,
            "maxTime": 0.0003,
            "countMinimum": [
                182,
                182,
                182,
                182,
                182
            ],
            "countMaximum": [
                261,
                261,
                261,
                261,
                261
            ]
        },
        {
            "testType": "COUNT_MINMAX",
            "dataFile": "counts.txt",
            "haveHeader": true,
            "minTime": 0.0004,
            "maxTime": 0.0004,
            "countMinimum": [
                102,
                102,
                102,
                102,
                102
            ],
            "countMaximum": [
                166,
                166,
                166,
                166,
                166
            ]
        },
        {
            "testType": "COUNT_MINMAX",
            "dataFile": "counts.txt",
            "haveHeader": true,
            "minTime": 0.0005,
            "maxTime": 0.0005,
            "countMinimum": [
                56,
                56,
                56,
                56,
                56
            ],
            "countMaximum": [
                106,
                106,
                106,
                106,
                106
            ]
        },
        {
            "testType": "COUNT_MINMAX",
            "dataFile": "counts.txt",
            "haveHeader": true,
            "minTime": 0.0006,
            "maxTime": 0.0006,
            "countMinimum": [
                29,
                29,
                29,
                29,
                29
            ],
            "countMaximum": [
                69,
                69,
                69,
                69,
                69
            ]
        },
        {
            "testType": "COUNT_MINMAX",
            "dataFile": "counts.txt",
            "haveHeader": true,
            "minTime": 0.0007,
            "maxTime": 0.0007,
            "countMinimum": [
                14,
                14,
                14,
                14,
                14
            ],
            "countMaximum": [
                45,
                45,
                45,
                45,
                45
            ]
        },
        {
            "testType": "COUNT_MINMAX",
            "dataFile": "counts.txt",
            "haveHeader": true,
            "minTime": 0.0008,
            "maxTime": 0.0008,
            "countMinimum": [
                5,
                5,
                5,
                5,
                5
            ],
            "countMaximum": [
                31,
                31,
                31,
                31,
                31
            ]
        },
        {
            "testType": "COUNT_MINMAX",
            "dataFile": "counts.txt",
            "haveHeader": true,
            "minTime": 0.0009,
            "maxTime": 0.0009,
            "countMinimum": [
                0,
                0,
                0,
                0,
                0
            ],
            "countMaximum": [
                21,
                21,
                21,
                21,
                21
            ]
        },
        {
            "testType": "COUNT_MINMAX",
            "dataFile": "counts.txt",
            "haveHeader": true,
            "minTime": 0.001,
            "maxTime": 0.001,
            "countMinimum": [
                -1,
                -1,
                -1,
                -1,
                -1
            ],
            "countMaximum": [
                14,
                14,
                14,
                14,
                14
            ]
        }
    ]
}
